	pipeline {
				agent any

				environment {
					GIT_REPO_URL = 'https://github.com/Saai0Kais/Jenkins-Sonarqube-Docker.git'
					DOCKER_IMAGE_NAME = 'web'
				}

				stages {
					stage ('Clean up workspace') {
				        steps {
				            cleanWs()
				        }
				    }
				
					stage('Checkout') {
						steps {
							checkout([$class: 'GitSCM', branches: [[name: '*/main']], userRemoteConfigs: [[url: GIT_REPO_URL]]])
						}
					}
				
				    
                    stage('Clone Repository') {
                        steps {
                            script {
                                // Assuming you have SSH keys set up for authentication
                                // You can also use the Jenkins Credentials plugin for a more secure way to handle SSH credentials
                    
                                // Replace 'your_docker_vm_ip' with the actual IP of your Docker VM
                                def dockerVmIp = '192.168.1.114'
                                
                                // Replace 'your_ssh_key_file' with the path to your private SSH key file
                                def sshKeyFile = "${env.HOME}/.ssh/id_rsa"
                                // Replace 'your_ssh_user' with the SSH user on your Docker VM
                                def sshUser = 'docker'
                    
                                // Replace 'your_repository_url' with the actual Git repository URL
                                def repositoryUrl = 'https://github.com/Saai0Kais/Jenkins-Sonarqube-Docker.git'
                    
                                // Clone the repository using SSH
                                sh "ssh ubuntu@192.168.1.114 git clone ${repositoryUrl} /home/ubuntu/website"
                            }
                        }
                    }
					
					stage('Build Docker Image') {
						steps {
							script {
								// Build Docker image
								sh " ssh ubuntu@192.168.1.114 docker build -t web /home/ubuntu/website"
							}
						}
					}
					
					
					stage('Run Docker Container') {
						steps {
							script {
								// Run Docker container
								sh "ssh ubuntu@192.168.1.114 docker run -d -p 8010:80 --name ${DOCKER_IMAGE_NAME}-container ${DOCKER_IMAGE_NAME}"
							}
						}
					}
				}
	}